)abbrev package ELFUTS EllipticFunctionsUnivariateTaylorSeries
++ Elliptic functions expanded as Taylor series
++ Author: Bill Burge, Clifton J. Williamson
++ Date Created: 1986
++ Date Last Updated: 17 February 1992
++ Keywords: elliptic function, Taylor series
++ Examples:
++ References:
++ Description: The elliptic functions sn, sc and dn are expanded as
++ Taylor series.
EllipticFunctionsUnivariateTaylorSeries(Coef,UTS):
 Exports == Implementation where
  Coef : Field
  UTS  : UnivariateTaylorSeriesCategory Coef
 
  L   ==> List
  I   ==> Integer
  RN  ==> Fraction Integer
  ST  ==> Stream Coef
  STT ==> StreamTaylorSeriesOperations Coef
  YS  ==> Y$ParadoxicalCombinatorsForStreams(Coef)
 
  Exports ==> with
    sn     : (UTS,Coef) -> UTS
      ++\spad{sn(x,k)} expands the elliptic function sn as a Taylor
      ++ series.
    cn     : (UTS,Coef) -> UTS
      ++\spad{cn(x,k)} expands the elliptic function cn as a Taylor
      ++ series.
    dn     : (UTS,Coef) -> UTS
      ++\spad{dn(x,k)} expands the elliptic function dn as a Taylor
      ++ series.
    sncndn: (ST,Coef) -> L ST
       ++\spad{sncndn(s,c)} is used internally.
 
  Implementation ==> add
    import StreamTaylorSeriesOperations Coef
    UPS==> StreamTaylorSeriesOperations Coef
    integrate ==> lazyIntegrate
    sncndnre:(Coef,L ST,ST,Coef) -> L ST
    sncndnre(k,scd,dx,sign) ==
            [integrate(0,      scd.2*$UPS scd.3*$UPS dx),  _
             integrate(1,  sign*scd.1*$UPS scd.3*$UPS dx),  _
             integrate(1,sign*k**2*$UPS scd.1*$UPS scd.2*$UPS dx)]
 
    sncndn(z,k) ==
      empty? z => [0 :: ST,1 :: ST,1::ST]
      frst z = 0 => YS(sncndnre(k,#1,deriv z,-1),3)
      error "ELFUTS:sncndn: constant coefficient should be 0"
    sn(x,k)  == series sncndn.(coefficients x,k).1
    cn(x,k)  == series sncndn.(coefficients x,k).2
    dn(x,k)  == series sncndn.(coefficients x,k).3

