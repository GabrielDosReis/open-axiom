)abbrev package RATFACT RationalFactorize
++ Author: P. Gianni
++ Date created: ??
++ Date last updated: December 1993
++ Factorization of extended polynomials with rational coefficients.
++ This package implements factorization of extended polynomials
++ whose coefficients are rational numbers. It does this by taking the
++ lcm of the coefficients of the polynomial and creating a polynomial
++ with integer coefficients. The algorithm in \spadtype{GaloisGroupFactorizer} is then
++ used to factor the integer polynomial. The result is normalized
++ with respect to the original lcm of the denominators.
++ Keywords: factorization, hensel, rational number
I  ==> Integer
RN ==> Fraction Integer
 
RationalFactorize(RP) : public == private where
  BP ==> SparseUnivariatePolynomial(I)
  RP : UnivariatePolynomialCategory RN
 
  public   ==> with
 
     factor           : RP ->  Factored RP
      ++ factor(p) factors an extended polynomial p over the rational numbers.
     factorSquareFree : RP -> Factored RP
      ++ factorSquareFree(p) factors an extended squareFree 
      ++ polynomial p over the rational numbers.

  private  ==> add
     import GaloisGroupFactorizer (BP)
     ParFact   ==> Record(irr:BP,pow:I)
     FinalFact ==> Record(contp:I,factors:List(ParFact))
     URNI      ==> UnivariatePolynomialCategoryFunctions2(RN,RP,I,BP)
     UIRN      ==> UnivariatePolynomialCategoryFunctions2(I,BP,RN,RP)
     fUnion    ==> Union("nil", "sqfr", "irred", "prime")
     FFE       ==> Record(flg:fUnion, fctr:RP, xpnt:I)
 
     factor(p:RP) : Factored(RP) ==
       p = 0 => 0
       pden: I := lcm([denom c for c in coefficients p])
       pol : RP := pden*p
       ipol: BP := map(numer,pol)$URNI
       ffact: FinalFact := henselFact(ipol,false)
       makeFR(((ffact.contp)/pden)::RP,
         [["prime",map(coerce,u.irr)$UIRN,u.pow]$FFE
                             for u in ffact.factors])
 
     factorSquareFree(p:RP) : Factored(RP) ==
       p = 0 => 0
       pden: I := lcm([denom c for c in coefficients p])
       pol : RP := pden*p
       ipol: BP := map(numer,pol)$URNI
       ffact: FinalFact := henselFact(ipol,true)
       makeFR(((ffact.contp)/pden)::RP,
         [["prime",map(coerce,u.irr)$UIRN,u.pow]$FFE
                             for u in ffact.factors])

