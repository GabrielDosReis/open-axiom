import RetractableTo
import Boolean
import Integer
import Fraction
)abbrev package RATRET RationalRetractions
++ Author: Manuel Bronstein
++ Description: rational number testing and retraction functions.
++ Date Created: March 1990
++ Date Last Updated: 9 April 1991
RationalRetractions(S:RetractableTo(Fraction Integer)): with
    rational     : S -> Fraction Integer
      ++ rational(x) returns x as a rational number;
      ++ error if x is not a rational number;
    rational?    : S -> Boolean
      ++ rational?(x) returns true if x is a rational number,
      ++ false otherwise;
    rationalIfCan: S -> Union(Fraction Integer, "failed")
      ++ rationalIfCan(x) returns x as a rational number,
      ++ "failed" if x is not a rational number;
  == add
    rational s      == retract s
    rational? s     == retractIfCan(s) case Fraction(Integer)
    rationalIfCan s == retractIfCan s

