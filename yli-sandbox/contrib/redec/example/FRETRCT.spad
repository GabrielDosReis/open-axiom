import Type
import RetractableTo
import Integer
import Fraction
)abbrev category FRETRCT FullyRetractableTo
++ Author: Manuel Bronstein
++ Description:
++   A is fully retractable to B means that A is retractable to B, and,
++   in addition, if B is retractable to the integers or rational
++   numbers then so is A.
++   In particular, what we are asserting is that there are no integers
++   (rationals) in A which don't retract into B.
++ Date Created: March 1990
++ Date Last Updated: 9 April 1991
FullyRetractableTo(S: Type): Category == RetractableTo(S) with
    if (S has RetractableTo Integer) then RetractableTo Integer
    if (S has RetractableTo Fraction Integer) then
              RetractableTo Fraction Integer
  add
    if not(S is Integer) then
      if (S has RetractableTo Integer) then    -- induction
        coerce(n:Integer):%  == n::S::%
        retract(r:%):Integer == retract(retract(r)@S)
 
        retractIfCan(r:%):Union(Integer, "failed") ==
          (u:= retractIfCan(r)@Union(S,"failed")) case "failed"=> "failed"
          retractIfCan(u::S)
 
    if not(S is Fraction Integer) then
      if (S has RetractableTo Fraction Integer) then   -- induction
        coerce(n:Fraction Integer):%  == n::S::%
        retract(r:%):Fraction(Integer) == retract(retract(r)@S)
 
        retractIfCan(r:%):Union(Fraction Integer, "failed") ==
          (u:=retractIfCan(r)@Union(S,"failed")) case "failed"=>"failed"
          retractIfCan(u::S)

