2012-01-14  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* algebra/catdef.spad.pamphlet (Finite) [random]: Provide default
	implementation. 
	* algebra/boolean.spad.pamphlet (KleeneTrivalentLogic): Now
	satisfy Finite.  Use Maybe Boolean as representation.

2012-01-14  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* interp/i-util.boot ($intTopLevel): Move to sys-constants.boot.
	* interp/g-error.boot (returnToTopLevel): Tidy.
	* interp/macros.lisp (applyWithOutputToString): Likewise.

2012-01-14  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* interp/spaderror.lisp: Move convent to spad.lisp.  Remove.

2012-01-14  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* interp/patches.lisp: Move content to msgdb.boot.  Remove.

2012-01-14  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* interp/word.boot: Add import and scope statements.  Include in
	final executables.
	(infix?): Remove as duplicate in match.boot.
	(prefix?): Likewise.
	(suffix?): Likewise.
	* interp/g-error.boot (returnToTopLevel): Tidy.
	* interp/debug.lisp (/D-2): Use spadThrow in lieu of UNWIND.
	* interp/patches.lisp (CATCHALL): Remove.
	(DBRINIT): Likewise.
	(TOPLEVEL): Likewise.
	(TOP-LEVEL): Likewise.
	(UNWIND): Likewise.
	(RESUME): Likewise.
	(booFind): Likewise.

2012-01-14  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* lisp/core.lisp.in (mkIntArray): New.  Export.
	* interp/patches.lisp (/RF): Move to cparse.boot.
	(/RQ): Likewise.
	(/RQ,LIB): Likewise.
	(/RF-1): Likewise.
	(/EF): Move to spad.lisp.
	(construct): Remove.
	(READSPADEXPR): Likewise.
	(SHAREDITEMS): Likewise.
	(installStandardTestPackages): Likewise.
	(spadtestValueHook): Likewise.
	(testError): Likewise.
	($TestOptions): Likewise.
	(rebuild): Likewise.
	($ViewportProcessToWatch): Likewise.
	(setViewportProcess): Likewise.
	(waitForViewport): Likewise.
	* interp/i-analy.boot (pushDownOp?): Use mkIntArray in place of
	GETZEROVEC.
	* interp/i-funsel.boot (argCouldBelongToSubdomain): Likewise.
	* interp/i-intern.boot (flagArguments): Likewise.

2012-01-12  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* interp/category.boot: Rename AncestorP to ancestor?.
	Rename DescendantP to descendant?.
	* interp/define.boot: Likewise.
	* interp/functor.boot: Likewise.

2012-01-12  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* boot/parser.boot (bpFunction): New.
	(bpConstTok): Include it.
	* boot/ast.boot (bfFunction): New.
	* boot/tokens.boot: `function' is now a keyword.

2012-01-11  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* boot/tokens.boot (keywordId): New.
	* boot/parser.boot (bpSexpKey): Use it.
	* interp/i-map.boot (mapPredTran): Fix thinko.

2012-01-09  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* boot/parser.boot (bpRequire): New.  Use it throughout this module.

2012-01-08  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* boot/ast.boot (bfEnum): New.
	* boot/translator.boot (translateToplevel): Use it to translate
	enumeration definitions.
	* interp/types.boot (%ConstructorKind): Use new syntax.

2012-01-01  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* interp/define.boot (evalCategoryForm): New.
	(mkCategoryPackage): Use it.
	(compMakeCategoryObject): Likewise.
	* interp/nruncomp.boot (NRTsetVector4a): Likewise.

