2007-08-17  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* translator.boot.pamphlet (bpOutItem): Translate ConstantDefinition
	nodes.  Update cached Lisp translation.
	* parser.boot.pamphlet (bpSimpleDefinitionTail): Build a
	ConstantDefinition Ast.  Update cached Lisp translation.
	* ast.boot.pamphlet (ConstantDefinition): A separate Ast node
	for constant definitions.
	(bfCompDef): Don't compile ConstantDefinition here.
	Update cached Lisp translation.

2007-08-17  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet (BOOTSYS_FOR_TARGET): Remove.
	(stamp): Update prerequisite.
	($(axiom_build_bindir)/bootsys$(EXEEXT)): Rename from
	$(BOOTSYS_FOR_TARGET). 
	(%/.started): Rename from mk-statge0-dir.  Tidy.
	(stage0/%.clisp): Update prerequisite.
	(%/initial-env.$(FASLEXT)): Likewise.
	(mk-stage1-dir): Remove.
	(mk-stage2-dir): Likewise.
	(mostlyclean-local): Update.
	* Makefile.in: Regenerate.

2007-08-07  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* ast.boot.pamphlet (bfColonColon): Use SYMBOL-NAME, not
	STRINGIMAGE. 

2007-08-05  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet (stage0/bootsys$(EXEEXT)): Use
	AxiomCore::topLevel as entry point.
	(stage1/bootsys$(EXEEXT)): Likewise.
	(stage2/bootsys$(EXEEXT)): Likewise.
	* Makefile.in: Regenerate.
	* initial-env.lisp.pamphlet (main): Remove.

2007-08-05  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* ast.boot.pamphlet: Don't guard IMPORT-MODULE with eval-when.
	* includer.boot.pamphlet: Likewise.
	* parser.boot.pamphlet: Likewise.
	* pile.boot.pamphlet: Likewise.
	* scanner.boot.pamphlet: Likewise.
	* tokens.boot.pamphlet: Likewise.
	* translator.boot.pamphlet: Likewise.
	* initial-env.lisp.pamphlet: Rework.

	* Makefile.pamphlet (AXIOM_LOCAL_LISP): Set to ../lisp/base-lisp.
	(boot_objects_extra): Remove.
	(boot_objects): Include "initial-env".
	(boot_SOURCES): Include initial-env.lisp.pamphlet.
	(pamphlets): Update.
	(%/tokens.($FASLEXT)): New.
	(%/includer.$(FASLEXT)): Likewise.
	(%/scanner.$(FASLEXT)): Likewise.
	(%/pile.$(FASLEXT)): Likewise.
	(%/ast.$(FASLEXT)): Likewise.
	(%/parser.$(FASLEXT)): Likewise.
	(%/translator.$(FASLEXT)): Likewise.
	(quiet_flags, eval_flags): Remove.
	(stage0-pre): Likewise.
	(stage0/%.$(FASLEXT)): Don't require initial-env.$(FASLEXT) here.
	(axiom_o): Remove.
	($(AXIOM_LOCAL_LISP)): Likewise.
	(%/initial-env.$(FASLEXT)): Make generic.
	* Makefile.in: Regenerate.

2007-05-31  Gabriel Dos Reis  <gdr@cs.tamu,edu>

	* initial-env.lisp.pamphlet (diagnostic-message): New.
	(|fatalError|): New. Handle fatal errors.
	(|internalError|): New. Handle internal translator errors.
	(get-command-line-arguments): New.
	(|$driverTable|): New.
	(|installDriver|): New. Use it.

2007-05-27  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* parser.boot.pamphlet ($sawParenthesizedHead): New.
	(bpBeginDefinition): Likewise.
	(bpDefinition): Use it to detect toplevel definition.
	(bpStoreName): Tentatively set the return type to Any type.
	(bpSimpleDefinitionTail): Break out from bpDefTail
	(bpCompoundDefinitionTail): Likewise.
	(bpDefTail): Use them.  Makes logic simpler.
	(bpRegularBVItem): Allow typed parameters.
	(bpBeginParameterList): New.
	(bpEndParameterList): Likewise.
	(bpVariable): Use them.  Remember when parameters are enclosed in
	parenthesis. 
	Update Lisp translation.

2007-05-26  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet: Add dependencies for FASL files.
	* ast.boot.pamphlet: Update Lisp translation.
	* includer.booot.pamphlet: Likewise.
	* initial-env.lisp.pamphlet (shoe-provide-module): New.  Define
	only for SBCL.
	* parser.boot.pamphlet: Update Lisp translation.
	* pile.boot.pamphlet: Likewise.
	* scanner.boot.pamphlet: Likewise.
	* tokens.boot.pamphlet: Likewise.
	* translator.boot.pamphlet: Likewise.

2007-05-28  Gabriel Dos Reis  <gdr@cs.tamu,edu>

	* Makefile.pamphlet (stage0/bootsys$(EXEEXT)): Don't use AX_FLAGS.
	(stage1/bootsys$(EXEEXT)): Likewise.
	(stage2/bootsys$(EXEEXT)): Likewise.

2007-05-22  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	Add support for simple type specifier definitions.
	* translator.boot.pamphlet (bpOutItem): Handle specially type
	alias definitions.
	* tokens.boot.pamphlet (shoeKeyWords): Add new token "<=>" for
	type alias definition.
	* parser.boot.pamphlet (bpTypeAliasDefition): New.
	(bpDefinition): Use it to parse type alias definitions.
	* ast.boot.pamphlet (bfTypeAliasDefinition): New.

2007-05-21  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	Translate definitions of global variables as defparameters.
	* ast.boot.pamphlet: Update Lisp translation.
	* includer.boot.pamphlet: Likwise.
	* tokens.boot.pamphlet: Likewise.
	* translator.boot.pamphlet (bpOutItem): Use DEFPARAMETER for
	assignment at global scope.
	Update Lisp translation.

2007-05-19  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	Add package call syntax
	* tokens.boot.pamphlet (shoeKwyWords): Add new token.  Document
	existing tokens. Update Lisp translation.
	* scanner.boot.pamphlet: Update Lisp translation.
	* parser.boot.pamphlet (bpQualifiedName): New.
	(bpName): Use it.  Allow explicit package qualification.
	Update Lisp translation.
	* includer.boot.pamphlet: Update Lisp translation.
	* ast.boot.pamphlet (bfColonColon): New.
	Update Lisp translation.
	* Makefile.pamphlet (clean-local): Remove .clisp files too.
	* Makefile.in: Regenerate.
	* translator.boot.pamphlet (shoeEVALANDFILEACTQ): Use
	:EXECUTE and :LOAD-TOPLEVEL instead of deprecated forms EVAL and
	LOAD. Update Lisp translation.

2007-05-19  Gabriel Dos Reis  <gdr@cs.tamu,edu>

	Give meaningful names to pamphlet files.
	* translator.boot.pamphlet: Rename from ptyout.boot.pamphlet.
	* tokens.boot.pamphlet: Rename from typrops.boot.pamphlet.
	* scanner.boot.pamphlet: Rename from btscan2.boot.pamphlet.
	* pile.boot.pamphlet: Rename from btpile2.boot.pamphlet.
	* parser.boot.pamphlet: Rename from typars.boot.pamphlet.
	* includer.boot.pamphlet: Rename from btincl2.boot.pamphlet.
	* ast.boot.pamphlet: Rename from tytree1.boot.pamphlet.

2007-05-13  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* initial-env.lisp.pamphlet (|shoeConsole|, |char|, |shoeCLOSE|,
	stringimage): Move to ... 
	* btincl2.boot.pamphlet (shoeConsole, char shoeCLOSE,
	STRINGIMAGE): ... here.  Define as Boot code.  Update Lisp
	translation. 
	* initial-env.lisp.pamphlet (double): Move to ...
	* btscan2.boot.pamphlet (DOUBLE): ... here.  Define as Boot code.
	Update Lisp translation.
	* initial-env.lisp.pamphlet (pname): Move to ...
	* typars.boot.pamphlet (PNAME): ... here.  Define as Boot code.
	Update Lisp translation.
	* initial-env.lisp.pamphlet (|shoeCOMPILE-FILE|): Move to ... 
	* ptyout.boot.pamphlet (shoeCOMPILE_-FILE): ... here.  Define as
	Boot code.  Update Lisp translation.
	* initial-env.lisp.pamphlet (shoeGREATERP): Remove.
	(|$lispType|, |$lispName|, |$machineType|): Likewise.

2007-05-13  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* initial-env.lisp.pamphlet ("BOOTTRAN"): Write exported
	functions in canonical form.
	($ieee): Define here. 
	(|shoeCloser|): Move to...
	* btscan2.boot.pamphlet (shoeCloser): ... here.  Define as Boot
	function. Include Lisp translation.

2007-05-12  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* initial-env.lisp.pamphlet (exit-repl): New.  
	(translate-boot-to-lisp): Likewise.
	(compile-lisp-file): Likewise.

2007-04-07  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* tytree1.boot.pamphlet ($inDefIS): Define.  Update cached Lisp
	translation. 

2007-04-05  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* tytree1.boot.pamphlet: Use bfAND to build AND expressions.
	Update cached Lisp translation.

2007-04-02  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* tytree1.boot.pamphlet (bfLET2): Handle literals in patterns.
	Update cached Lisp translation.

2007-03-24  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet: Fix typos.

2007-03-13  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* btpile2.boot.pamphlet: Fix typo.
	* initial-env.lisp.pamphlet: Really add to the repository.

2007-03-13  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	Support build with GCL, SBCL, CLISP.
	* btincl2.boot.pamphlet: Update cached Lisp translation.
	* btpile2.boot.pamphlet: Likewise.
	* btscan2.boot.pamphlet: Likewise.
	* tytree1.boot.pamphlet: Likewise.
	* typars.boot.pamphlet: Likewise.
	* ptyout.boot.pamphlet: Likewise.
	(setCurrentPackage): New function.
	(BOOTTOCLCLINES): Use it.
	(BOOTTOMC): Likewise.
	(BO): Likewise.
	(BOCLAM): Likewise.
	(STEVAL): Likewise.
	(STTOMC): Likewise.
	(PSTOUT): Likewise.
	* npextras.lisp.pamphlet: Remove.
	* exports.lisp.pamphlet: Likewise.
	* boothdr.lisp.pamphlet: Likewise.
	* initial-env.lisp.pamphlet: New file.
	* Makefile.pamphlet: Simplify.  Document [[AXIOM_LOCAL_LISP]].
	Remove outdated and obsolete documentation.
	(LISPSYS): Remove.
	(AXIOM_LOCAL_LISP): Rename from LOADSYS.
	(AXIOM_LOCAL_LISP_sources): New.
	(boot_sources_without_deps): Remove.
	(boot_sources_with_deps): Likewise.
	(boot_clisp_with_deps): Likewise.
	(boot_data_with_deps): Likewise.
	(boot_clisp_without_deps): Likewise.
	(boot_data_without_deps): Likewise.
	(boot_objects, boot_sources): Adjust.
	(COMPILE_LISP_WITH_DEPS): Remove.
	(COMPILE_LISP): Adjust.
	(BOOT_TO_LISP): Likewise.
	(stage0_boot_clisp): Rename from stage0_boot_clisp_with_deps.
	(stage0_boot_objects): Rename from stage0_boot_objects_with_deps.
	(stage0/bootsys$(EXEEXT): Adjust.
	(stage1/bootsys$(EXEEXT): Likewise.
	(stage2/bootsys$(EXEEXT): Likewise.
	($(AXIOM_LOCAL_LISP)): New rule.
	(initial-env.lisp): Likewise.
	(clean-local): Adjust.
	* Makefile.in: Regenerate.

2007-03-04  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* ptyout.boot.pamphlet: Fix typo.
	* btincl2.boot.pamphlet: Document call graphs of functions defined
	in this pamphlet.
	* Makefile.pamphlet: Fix whitespace glitche around
	<<environment>> chunk that confuses noweb.
	(pamplhets): Fix spellling.
	* Makefile.in: Regenerate.

2007-02-16  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet (bootsys$(EXEEXT)): Fix thinko.
	* Makefile.in: Regenerate.

2006-12-26  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet (COMPILE_LISP): Use -batch -eval form.
	(COMPILE_LISP_WITH_DEPS): Likewise.
	* Makefile.in: Regenerate.

2006-12-11  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* typrops.boot.pamphlet: Temporarily isable "member" as special
	new Boot function.

2006-11-26  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet (\subsection{The Parser}): Update.
	(boot_sources_with_deps): Lose tyextra.boot.
	* Makefile.in: Regenerate.
	* tyextra.boot.pamphlet: Fold content into typars.boot.pamphlet
	and tytree1.boot.pamphlet.  Remove.
	* typars.boot.pamphlet: Update bootstrap code.
	* tytree1.boot.pamphlet: Likewise.

2006-11-26  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet: Add support for OS that require extension for
	executable binaries.
	* Makefile.in: Regenerate.

2006-11-21  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* ccl-debugsys.lsp.pamphlet: Move to ../interp.

2006-11-20  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet (BOOT_TO_LISP): Use $(axiom_build_document) to
	translate from Boot.
	* Makefile.in: Regenerate.

2006-11-19  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* ptyout.boot.pamphlet (STEVAL, STTOMC): Fix thinko.

2006-11-19  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* typars.boot.pamphlet: Start documentation.

2006-11-18  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet (BOOT_TO_LISP): Use boottoclc.

2006-11-18  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet: Document the purpose of each file.

2006-11-16  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* ptyout.boot.pamphlet (BOOTTOCLLINES, BOOTTOMC, BOCLAM,
	STEVAL, STTOMC, PSTOU): Temporarily push
	into package BootTran and default float format to double.
	(BOOTTOCL): Don't do it here.
	(shoeNotFound): Return nil.

2006-11-15  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* ptyout.boot.pamphlet (shoeClLines): Return the result of 
	shoeNotFound is input file is not existent.

2006-11-15  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* ptyout.boot.pamphlet (shoeFileTrees): Use REALLYPRETTYPRINT
	instead of shoePPtoFile.

2006-11-15    Waldek Hebisch  <hebisch@math.uni.wroc.pl>

	* Makefile.pamphlet: Correct a typo

2006-11-15  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* ptyout.boot.pamphlet (boottoclc): Fix description to match
	implementation. 
	* Makefile.pamphlet: Likewise.
	(BOOT_TO_LISP): Use boottran::boottoclc.

2006-10-31  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet (\subsubsection{Keywords}): Sync documentation
	and implementation.

2006-10-28  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet (mostlyclean-local): Remove stamp if present. 

2006-10-11  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet (COMPILE_LISP, COMPILE_LISP_WITH_DEPS, 
	BOOT_TO_LISP): Remove ($(BYE)).
	* Makefile.in: Regenerate.

2006-10-02  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet: Tidy bootstrapping rules.
	* Makefile.in: Regenerate.

2006-09-29  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet: Rework.
	* Makefile.in: Regenerate.

2006-09-26  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet (all): Create stamp file.
	* Makefile.in: Regenerate.

2006-09-18  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet: Remove generic rules for making DVI, they are
	now generated by the build machinery.
	(DOCFILES): Remove.
	(document): Remove.
	(clean-local): Rename from clean.
	(distclean-local): Rename from distclean.
	(mostlyclean): New.
	(pamphlet, boot_SOURCES): New.

2006-09-18  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet (subdir): New.
	* Makefile.in: Regenerate.

2006-09-17  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet (LISPSYS, LOADSYS): Point to
	$(axiom_build_bindir)/lisp. 
	* Makefile.in: Regenerate.

2006-09-13  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet: Throughout replace {O} with (OBJEXT).  OBJEXT
	is Autoconf-detected.
	* Makefile.in: Regenerate.

2006-09-04  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet: Simplify.  Use generic rules.  emove special
	cased-rules.  Build to $(builddir). 
	* Makefile.in: Regenerate.

2006-08-27  Gabriel Dos Reis  <gdr@cs.tamu.edu>

	* Makefile.pamphlet (${OUT}/boothdr.${O}, ${OUT}/btincl2.${O}, 
	btincl2.boot, ${OUT}/btpile2.${O}, btpile2.boot, 
	${OUT}/btscan2.${O}, btscan2.boot, ${OUT}/exports.${O},
	${OUT}/npextras.${O}, ${OUT}/ptyout.${O}, ptyout.boot,
	${OUT}/tyextra.${O}, ${OUT}/typars.${O}, typars.boot,
	${OUT}/typrops.${O}, typrops.boot, ${OUT}/tytree1.${O},
	tytree1.boot): Don't overwrite $(TMP)/trace, append instead.

