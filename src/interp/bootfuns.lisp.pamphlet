%% Oh Emacs, this is a -*- Lisp -*- file despite apperance.
\documentclass{article}
\usepackage{axiom}

\title{\File{src/interp/bootfuns.lisp} Pamphlet}
\author{Timothy Daly}

\begin{document}
\maketitle

\begin{abstract}
\end{abstract}

\tableofcontents
\eject


\section{License}

<<license>>=
;; Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are
;; met:
;;
;;     - Redistributions of source code must retain the above copyright
;;       notice, this list of conditions and the following disclaimer.
;;
;;     - Redistributions in binary form must reproduce the above copyright
;;       notice, this list of conditions and the following disclaimer in
;;       the documentation and/or other materials provided with the
;;       distribution.
;;
;;     - Neither the name of The Numerical ALgorithms Group Ltd. nor the
;;       names of its contributors may be used to endorse or promote products
;;       derived from this software without specific prior written permission.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
;; IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
;; TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
;; PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
;; OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
;; EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
;; PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
;; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
;; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
;; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

@



\section{The [[BOOT]] package}

Everything in axiom that the user references eventually shows
up here. The interpreter and the algebra are run after switching
to the boot package (in-package "BOOT") so any symbol that the
interpreter or algebra uses has to (cough, cough) appear here.
<<*>>=
<<license>>

(IMPORT-MODULE "sys-constants")
(IMPORT-MODULE "sys-globals")

@

Note that it is confusing the package \Tool{Axiom}'s compiler and
interpreter use is called [[BOOT]].  It should have been
[[Spad]], or better yet [[Axiom]].



\section{Portability issues}

This section discusses some portability issues known to affect
this module.

\subsection{[[compiler-let]]}

The construct [[compiler-let]] is not part of ANSI Lisp, although
it had been described in CLTL.  Therefore some Lisp implementations
offer it as extensions.

<<non-portable-codes>>=
#+:clisp (import 'ext:compiler-let)
@

<<*>>=

; NAME:	   Boot Package
; PURPOSE: Provide forward references to Boot Code for functions to be at
;	   defined at the boot level, but which must be accessible
;	   not defined at lower levels.

(in-package "BOOT")

<<non-portable-codes>>

(defmacro def-boot-val (p val where)
  `(compiler-let nil
     (defparameter ,p ,val ,where)
     (export '(,p) "BOOT")))


;  modemap:==  ( <map> (p e) (p e) ... (p e) )
;  modemaplist:= ( modemap ... )

(def-boot-val |$CategoryFrame|
	  '((((|Category| . ((|modemap| (((|Category|) (|Category|)) (T *)))))
	      (|Join| . ((|modemap|
      (((|Category|) (|Category|) (|Category|) (|Category|)) (T *))
      (((|Category|) (|Category|) (|List| |Category|)) (|Category|)) (T *))
	)))))
	"Compiler>CUtil.boot")
(def-boot-val |$spadLibFT| 'LISPLIB		    "???")
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
