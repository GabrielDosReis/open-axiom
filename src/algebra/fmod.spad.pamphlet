\documentclass{article}
\usepackage{open-axiom}
\begin{document}
\title{\$SPAD/src/algebra fmod.spad}
\author{The Axiom Team}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{domain ZMOD IntegerMod}
<<domain ZMOD IntegerMod>>=
)abbrev domain ZMOD IntegerMod
++ Author:
++ Date Created:
++ Date Last Updated: May 29, 2009
++ Basic Functions:
++ Related Constructors:
++ Also See:
++ AMS Classifications:
++ Keywords:
++ References:
++ Description:
++ IntegerMod(n) creates the ring of integers reduced modulo the integer
++ n.

IntegerMod(p:PositiveInteger):
 Join(CommutativeRing, Finite, ConvertibleTo Integer, StepThrough) == add
  Rep == Integer
  size() == p
  characteristic == p
  lookup x ==
    zero? x => p
    rep(x)::PositiveInteger

  convert(x: %): Integer == rep x
  coerce(n: Integer): % == per positiveRemainder(n,p)
  coerce(x): OutputForm == rep(x)::OutputForm
  0 == per(0$Rep)
  1 == per(1$Rep)
  init == 0
  nextItem n ==
    m := n+1
    m = 0 => nothing
    just m

  zero? x == rep x = 0
  one? x == rep x = 1

  x = y ==
    rep x = rep y

  x:% * y:% ==
    per mulmod(rep x,rep y,p)

  n:Integer * x:% ==
    per mulmod(positiveRemainder(n, p), rep x, p)

  x + y ==
    per addmod(rep x,rep y,p)

  x - y ==
    per submod(rep x,rep y,p)

  random() == per random(p)$Rep

  index a ==
    per positiveRemainder(a,p)

  -x ==
    zero? rep x => 0
    per(p - rep x)

  x:% ** n:NonNegativeInteger ==
    per powmod(rep x, n, p)

  recip x ==
     (c1, c2, g) := extendedEuclidean(rep x, p)$Rep
     not one? g => "failed"
     per positiveRemainder(c1, p)

  before?(x,y) == before?(rep x,rep y)

@
\section{License}
<<license>>=
--Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
--All rights reserved.
--
--Redistribution and use in source and binary forms, with or without
--modification, are permitted provided that the following conditions are
--met:
--
--    - Redistributions of source code must retain the above copyright
--      notice, this list of conditions and the following disclaimer.
--
--    - Redistributions in binary form must reproduce the above copyright
--      notice, this list of conditions and the following disclaimer in
--      the documentation and/or other materials provided with the
--      distribution.
--
--    - Neither the name of The Numerical ALgorithms Group Ltd. nor the
--      names of its contributors may be used to endorse or promote products
--      derived from this software without specific prior written permission.
--
--THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
--IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
--TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
--PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
--OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
--EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
--PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
--PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
--LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
--NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
--SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@
<<*>>=
<<license>>

<<domain ZMOD IntegerMod>>
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
