
## ----------------------------------------
## -- Old-style OpenAxiom makefile variables --
## ----------------------------------------

GCLOPTS=@GCLOPTS@

pamphlets = configure.ac.pamphlet Makefile.pamphlet


subdir = 

SUBDIRS = src

build_srcdir = $(builddir)/src

AXIOM_SRC_TARGETS = all-algebra all-asq all-axiomsys all-boot all-share \
	all-clef all-doc all-graph all-hyper all-input all-interpsys \
	all-lib all-lisp all-sman all-driver all-src  all-databases all-utils

.PHONY: all $(AXIOM_SRC_TARGETS)
all: all-ax

all-ax: all-src
	@echo finished system build on `date` | tee > lastBuildDate

$(AXIOM_SRC_TARGETS): stamp-rootdirs
all-src: stamp-rootdirs @oa_all_prerequisites@

ifeq ($(strip $(oa_include_gcl)),yes)
all-boot all-lisp all-interpsys all-axiomsys \
  all-algebra all-input: all-gcl
endif

$(AXIOM_SRC_TARGETS):
	cd "$(build_srcdir)" && $(MAKE) $@

.PHONY: all-algstrap
all-algstrap:
	cd src/algebra && $(MAKE) $@

stamp-rootdirs:
	@$(STAMP) stamp-rootdirs


.PHONY: all-gcl
all-gcl: $(axiom_build_bindir)/gcl$(EXEEXT)

$(axiom_build_bindir)/gcl$(EXEEXT):
	if test "$(srcdir)" != "$(builddir)" -a ! -d gcl; then \
	   cp -r "$(srcdir)"/gcl "$(builddir)"; \
	fi; cd gcl; \
	./configure --prefix="$(axiom_abs_builddir)" ${GCLOPTS} && \
		$(MAKE) && $(MAKE) install
.PHONY: install
install:
	@echo Installing OpenAxiom in $(DESTDIR)$(prefix)
	@$(mkinstalldirs) "$(DESTDIR)$(open_axiom_installdir)"
	cp -pr "$(builddir)"/$(target)/* "$(DESTDIR)$(open_axiom_installdir)"
	rm -f "$(DESTDIR)$(bindir)"/open-axiom
	@$(mkinstalldirs) "$(DESTDIR)$(bindir)"
	$(INSTALL_PROGRAM) src/driver/open-axiom$(EXEEXT) "$(DESTDIR)$(bindir)"
	@echo OpenAxiom installation finished.

.PHONY: check
check:
	cd src && $(MAKE) all-check


mostlyclean-local:
	@-rm -f lastBuildDate

clean-local: mostlyclean-local
	@ rm -f stamp-*
	@ rm -rf int

distclean-local: clean-local
	@-rm -rf build
	@-rm -rf "$(axiom_targetdir)"
	@-rm -f config.status config.log
	@-rm -f Makefile

$(top_builddir)/config.status: $(top_srcdir)/configure
	$(SHELL) ./config.status --recheck
