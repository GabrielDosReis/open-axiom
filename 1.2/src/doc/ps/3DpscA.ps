%!PS-Adobe-2.0
%%DocumentFonts: Times-Roman
%%Creator: Axiom
%%CreationDate: today
%%Pages: 1
%%processing (hard) limit: 250 pts or 500 values for the operand stack.
%%EndComments

%------------------------------- prologue -------------------------------%
%-------------------------- support procedures --------------------------%

%--------- first create user dictionary with 100 entries max ------------%
%          (number can be changed to accomodate definitions)             %

100	dict	begin		%% using 100 entries in top level dictionary

/FontHeight     12 def

/inch
        {       72 mul }
        def

% yVal and hVal are necessary because the Xwindow display origin
% is at the upper left corner, while the postscript display
% origin is at the lower left hand corner.

/yVal		%% get Y value -- make upper left corner origin
        {       maxY sub abs }	%% maxY is viewWindow height
        def

/hVal		%% get H value -- used for displaying title text
        {       maxH sub abs }	%% maxH is viewWindow height+titleWindow height
        def

% loads in the font

/loadFont
        {       /Times-Roman findfont FontHeight scalefont setfont }
        def

% draws a rectangle with input operand: 
%		height
%		width
% notice that this function does not "draw" or ink the rectangle.
/drawRect
	{	1 index 1 add 0 rlineto		%% draw first side
                0 exch 1 add neg rlineto	%% draw second side
                1 add neg 0 rlineto		%% draw third side
                closepath }			%% draw fourth side
        def

% create a rectangle with input operand in the view window: 
%		y
%		x
%		height
%		width
% notice that this function does not "draw" or ink the rectangle.
/rectangle
        {       yVal moveto			%% set currentpoint for line
		drawRect }			%% draws the rectangle
        def

% These are global variables that every draw procedure uses
% THe operand should be as follows:
%		viewWindow width
%		viewWindow height
%		title height
/setDim
        {       /maxX exch def			%% width of display
                /maxY exch def			%% height of display
		/titleH exch def		%% height of title
		/maxH maxY titleH add def	%% height of display + title
        } def

%-------------------------- major procedures --------------------------%

/title		%% draws a rectangle around the title of picture
	{	gsave
		newpath
		moveto				%% lower left of title
                titleH 1 add 0 exch rlineto	%% draw first side
                1 add 0 rlineto			%% draw second side
                1 add neg 0 exch rlineto
		begin installGC stroke end	%% draw third side
		grestore }
	def

/drawFrame      %% draw display frame
        {	gsave
                newpath
                maxX maxY 0 0 rectangle
		begin installGC stroke end
                grestore }
        def

% updates the foreground color of existing graphics-context dictionary:
%		foreground color
%		dictionary name
/setForeground
	{	/FGcolor exch put }
	def

% updates the background color of existing graphics-context dictionary:
%		background color
%		dictionary name
/setBackground
	{	/BGcolor exch put }
	def

% updates the line width, line style, cap style, join style of
% existing graphics-context dictionary:
%		dictionary name
%		join style
%		cap style
%		line width
/setLineAttributes
	{	begin
		/JoinStyle exch def
		/CapStyle  exch def
		/LineWidth exch def
		end }
	def

% creates a graphics context dictionary with the following information:
%		/dictionary name
%		foreground color
%		background color
%		line width
%		cap style
%		join style
% this creates different graphical contexts for different drawing functions.
/makeDict
	{	5 dict 2 copy def begin	pop %% with dict name on top of stack
		/FGcolor   exch def	%% define drawing attributes
		/BGcolor   exch def	%% not heavily used
		/LineWidth exch def
		/CapStyle  exch def
		/JoinStyle exch def
		end }
	def

% makes the current dictionary attributes effective
% this function takes the values in the current dictionary to set the context
% these are the values currently being used: foreground, cap, join, and width
/installGC
	{
		FGcolor currentgray ne
		{FGcolor setgray} if		%% foreground color
		CapStyle currentlinecap ne
		{CapStyle setlinecap} if	%% cap style
		JoinStyle currentlinejoin ne
		{JoinStyle setlinejoin} if	%% join style
		LineWidth currentlinewidth ne
		{LineWidth setlinewidth} if }	%% line width
	def

% operand stack configuration in order to use psDrawLine:
%		psDrawLine
%		y0
%		x0
%		y1
%		x1
%		graphics-context dictionary
% this draws a line from (x0, y0) to (x1, y1).

/psDrawLine
        {	gsave
                newpath
                yVal moveto
                yVal lineto
		begin installGC stroke end
		grestore }
        def

% operand stack configuration in order to use psDrawStr:
%		psDrawStr
%		y
%		x
%		string
%		graphics-context dictionary
% this function draws a text string at (x,y).

/psDrawStr
        {	gsave
		newpath
                loadFont
                yVal moveto
		exch begin installGC show end
                grestore }
        def

%-------------------------- script --------------------------%

% 1 inch 1 inch translate

   mark					%% mark bottom of our stack

	0	0	1
	1072693248	0	/globalGC1	makeDict
	0	0	1
	1072693248	0	/globalGC2	makeDict
	0	0	1
	1072693248	0	/trashGC	makeDict
	0	0	1
	1072693248	0	/componentGC	makeDict
	0	0	1
	1072693248	0	/opaqueGC	makeDict
	0	0	1
	1072693248	0	/renderGC	makeDict
	0	0	1
	1072693248	0	/globGC	makeDict
	0	0	1
	1072693248	0	/anotherGC	makeDict
	1	0	1
	1072693248	0	/renderGC	makeDict

    gsave	% save graphics state for clipping path

	1.000000	1.000000	scale

	24	303	300	setDim
	maxX maxY	0 0	rectangle	clip	% set clip path

	globalGC1	0.000000	setForeground
	globGC	0.000000	setForeground
	globalGC1	18	256	253	90	psDrawLine
	globGC	(X)	13	261	psDrawStr
	globalGC1	107.000000	setForeground
	globGC	107.000000	setForeground
	globalGC1	0.000000	setForeground
	globGC	0.000000	setForeground
	globalGC1	281	256	46	90	psDrawLine
	globGC	(Y)	286	261	psDrawStr
	globalGC1	107.000000	setForeground
	globGC	107.000000	setForeground
	globalGC1	0.000000	setForeground
	globGC	0.000000	setForeground
	globalGC1	150	25	150	263	psDrawLine
	globGC	(Z)	155	20	psDrawStr
	globalGC1	107.000000	setForeground
	globGC	107.000000	setForeground
	0	0	0	componentGC	setLineAttributes
	componentGC	0.000000	setForeground
	componentGC	0.000000	setForeground
	componentGC	151	292	138	292	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	165	288	151	292	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	177	282	165	288	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	187	274	177	282	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	195	264	187	274	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	200	253	195	264	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	202	241	200	253	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	200	229	202	241	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	195	218	200	229	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	188	208	195	218	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	178	200	188	208	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	167	194	178	200	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	155	190	167	194	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	143	189	155	190	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	130	190	143	189	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	119	192	130	190	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	109	197	119	192	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	102	204	109	197	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	97	211	102	204	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	95	220	97	211	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	97	228	95	220	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	102	236	97	228	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	111	243	102	236	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	122	248	111	243	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	135	250	122	248	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	149	250	135	250	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	164	247	149	250	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	177	241	164	247	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	189	232	177	241	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	198	222	189	232	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	203	210	198	222	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	205	198	203	210	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	204	186	205	198	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	199	175	204	186	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	192	164	199	175	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	182	156	192	164	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	170	149	182	156	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	157	145	170	149	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	144	143	157	145	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	131	143	144	143	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	118	145	131	143	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	108	150	118	145	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	99	156	108	150	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	94	163	99	156	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	92	171	94	163	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	93	180	92	171	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	98	187	93	180	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	106	194	98	187	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	118	199	106	194	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	132	201	118	199	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	147	201	132	201	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	163	198	147	201	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	178	192	163	198	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	190	184	178	192	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	200	173	190	184	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	207	161	200	173	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	210	149	207	161	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	209	136	210	149	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	204	125	209	136	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	196	114	204	125	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	186	105	196	114	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	173	98	186	105	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	160	93	173	98	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	145	90	160	93	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	131	90	145	90	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	118	91	131	90	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	106	95	118	91	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	97	101	106	95	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	90	107	97	101	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	87	115	90	107	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	88	123	87	115	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	93	131	88	123	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	101	137	93	131	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	114	142	101	137	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	128	144	114	142	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	145	144	128	144	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	162	141	145	144	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	178	135	162	141	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	192	127	178	135	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	203	116	192	127	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	211	104	203	116	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	214	91	211	104	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	214	79	214	91	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	209	66	214	79	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	201	55	209	66	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	190	46	201	55	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	177	38	190	46	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	163	33	177	38	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	147	29	163	33	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	132	28	147	29	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	117	29	132	28	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	104	32	117	29	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	93	37	104	32	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	86	43	93	37	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	82	50	86	43	psDrawLine
	componentGC	0.000000	setForeground
	componentGC	82	57	82	50	psDrawLine

    grestore	% restore graphics state


   cleartomark					%% clearing operand stack

end		%% pops mainDict from dictionary stack

showpage

%-------------------------- end --------------------------%
