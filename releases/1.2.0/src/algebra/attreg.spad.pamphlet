\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/algebra attreg.spad}
\author{The Axiom Team}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{category ATTREG AttributeRegistry}
<<category ATTREG AttributeRegistry>>=
)abbrev category ATTREG AttributeRegistry

++ This category exports the attributes in the AXIOM Library
AttributeRegistry(): Category == with
  finiteAggregate
    ++ \spad{finiteAggregate} is true if it is an aggregate with a 
    ++ finite number of elements.
  commutative("*")
    ++ \spad{commutative("*")} is true if it has an operation
    ++ \spad{"*": (D,D) -> D} which is commutative.
  shallowlyMutable
    ++ \spad{shallowlyMutable} is true if its values
    ++ have immediate components that are updateable (mutable).
    ++ Note: the properties of any component domain are irrevelant to the
    ++ \spad{shallowlyMutable} proper.
  unitsKnown
    ++ \spad{unitsKnown} is true if a monoid (a multiplicative semigroup 
    ++ with a 1) has \spad{unitsKnown} means that
    ++ the operation \spadfun{recip} can only return "failed" 
    ++ if its argument is not a unit.
  leftUnitary
    ++ \spad{leftUnitary} is true if \spad{1 * x = x} for all x.
  rightUnitary
    ++ \spad{rightUnitary} is true if \spad{x * 1 = x} for all x.
  noZeroDivisors
    ++ \spad{noZeroDivisors} is true if \spad{x * y \~~= 0} implies 
    ++ both x and y are non-zero.
  canonicalUnitNormal
    ++ \spad{canonicalUnitNormal} is true if we can choose a canonical
    ++ representative for each class of associate elements, that is
    ++ \spad{associates?(a,b)} returns true if and only if 
    ++ \spad{unitCanonical(a) = unitCanonical(b)}.
  canonicalsClosed
    ++ \spad{canonicalsClosed} is true if 
    ++ \spad{unitCanonical(a)*unitCanonical(b) = unitCanonical(a*b)}.
  arbitraryPrecision
    ++ \spad{arbitraryPrecision} means the user can set the 
    ++ precision for subsequent calculations.
  partiallyOrderedSet
    ++ \spad{partiallyOrderedSet} is true if
    ++ a set with \spadop{<} which is transitive, 
    ++ but \spad{not(a < b or a = b)}
    ++ does not necessarily imply \spad{b<a}.
  central
    ++ \spad{central} is true if, given an algebra over a ring R,
    ++ the image of R is the center
    ++ of the algebra, i.e. the set of members of the algebra which commute
    ++ with all others is precisely the image of R in the algebra.
  noetherian
    ++ \spad{noetherian} is true if all of its ideals are finitely generated.
  additiveValuation
    ++ \spad{additiveValuation} implies
    ++ \spad{euclideanSize(a*b)=euclideanSize(a)+euclideanSize(b)}.
  multiplicativeValuation
    ++ \spad{multiplicativeValuation} implies
    ++ \spad{euclideanSize(a*b)=euclideanSize(a)*euclideanSize(b)}.
  NullSquare
    ++ \axiom{NullSquare} means that \axiom{[x,x] = 0} holds.
    ++ See \axiomType{LieAlgebra}.
  JacobiIdentity
    ++ \axiom{JacobiIdentity} means that 
    ++ \axiom{[x,[y,z]]+[y,[z,x]]+[z,[x,y]] = 0} holds.
    ++ See \axiomType{LieAlgebra}.
  canonical
    ++ \spad{canonical} is true if and only if distinct elements have 
    ++ distinct data structures. For example, a domain of mathematical objects 
    ++ which has the \spad{canonical} attribute means that two objects 
    ++ are mathematically
    ++ equal if and only if their data structures are equal.

@
\section{License}
<<license>>=
--Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
--All rights reserved.
--
--Redistribution and use in source and binary forms, with or without
--modification, are permitted provided that the following conditions are
--met:
--
--    - Redistributions of source code must retain the above copyright
--      notice, this list of conditions and the following disclaimer.
--
--    - Redistributions in binary form must reproduce the above copyright
--      notice, this list of conditions and the following disclaimer in
--      the documentation and/or other materials provided with the
--      distribution.
--
--    - Neither the name of The Numerical ALgorithms Group Ltd. nor the
--      names of its contributors may be used to endorse or promote products
--      derived from this software without specific prior written permission.
--
--THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
--IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
--TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
--PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
--OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
--EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
--PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
--PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
--LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
--NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
--SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@
<<*>>=
<<license>>

<<category ATTREG AttributeRegistry>>
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
