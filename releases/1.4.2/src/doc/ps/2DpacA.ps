%!PS-Adobe-2.0
%%DocumentFonts: Times-Roman
%%Creator: Axiom
%%CreationDate: today
%%Pages: 1
%%processing (hard) limit: 250 pts or 500 values for the operand stack.
%%EndComments

%------------------------------- prologue -------------------------------%
%-------------------------- support procedures --------------------------%

%--------- first create user dictionary with 100 entries max ------------%
%          (number can be changed to accomodate definitions)             %

100	dict	begin		%% using 100 entries in top level dictionary

/FontHeight     12 def

/inch
        {       72 mul }
        def

% yVal and hVal are necessary because the Xwindow display origin
% is at the upper left corner, while the postscript display
% origin is at the lower left hand corner.

/yVal		%% get Y value -- make upper left corner origin
        {       maxY sub abs }	%% maxY is viewWindow height
        def

/hVal		%% get H value -- used for displaying title text
        {       maxH sub abs }	%% maxH is viewWindow height+titleWindow height
        def

% loads in the font

/loadFont
        {       /Times-Roman findfont FontHeight scalefont setfont }
        def

% draws a rectangle with input operand: 
%		height
%		width
% notice that this function does not "draw" or ink the rectangle.
/drawRect
	{	1 index 1 add 0 rlineto		%% draw first side
                0 exch 1 add neg rlineto	%% draw second side
                1 add neg 0 rlineto		%% draw third side
                closepath }			%% draw fourth side
        def

% create a rectangle with input operand in the view window: 
%		y
%		x
%		height
%		width
% notice that this function does not "draw" or ink the rectangle.
/rectangle
        {       yVal moveto			%% set currentpoint for line
		drawRect }			%% draws the rectangle
        def

% These are global variables that every draw procedure uses
% THe operand should be as follows:
%		viewWindow width
%		viewWindow height
%		title height
/setDim
        {       /maxX exch def			%% width of display
                /maxY exch def			%% height of display
		/titleH exch def		%% height of title
		/maxH maxY titleH add def	%% height of display + title
        } def

%-------------------------- major procedures --------------------------%

/title		%% draws a rectangle around the title of picture
	{	gsave
		newpath
		moveto				%% lower left of title
                titleH 1 add 0 exch rlineto	%% draw first side
                1 add 0 rlineto			%% draw second side
                1 add neg 0 exch rlineto
		begin installGC stroke end	%% draw third side
		grestore }
	def

/drawFrame      %% draw display frame
        {	gsave
                newpath
                maxX maxY 0 0 rectangle
		begin installGC stroke end
                grestore }
        def

% updates the foreground color of existing graphics-context dictionary:
%		foreground color
%		dictionary name
/setForeground
	{	/FGcolor exch put }
	def

% updates the background color of existing graphics-context dictionary:
%		background color
%		dictionary name
/setBackground
	{	/BGcolor exch put }
	def

% updates the line width, line style, cap style, join style of
% existing graphics-context dictionary:
%		dictionary name
%		join style
%		cap style
%		line width
/setLineAttributes
	{	begin
		/JoinStyle exch def
		/CapStyle  exch def
		/LineWidth exch def
		end }
	def

% creates a graphics context dictionary with the following information:
%		/dictionary name
%		foreground color
%		background color
%		line width
%		cap style
%		join style
% this creates different graphical contexts for different drawing functions.
/makeDict
	{	5 dict 2 copy def begin	pop %% with dict name on top of stack
		/FGcolor   exch def	%% define drawing attributes
		/BGcolor   exch def	%% not heavily used
		/LineWidth exch def
		/CapStyle  exch def
		/JoinStyle exch def
		end }
	def

% makes the current dictionary attributes effective
% this function takes the values in the current dictionary to set the context
% these are the values currently being used: foreground, cap, join, and width
/installGC
	{
		FGcolor currentgray ne
		{FGcolor setgray} if		%% foreground color
		CapStyle currentlinecap ne
		{CapStyle setlinecap} if	%% cap style
		JoinStyle currentlinejoin ne
		{JoinStyle setlinejoin} if	%% join style
		LineWidth currentlinewidth ne
		{LineWidth setlinewidth} if }	%% line width
	def

% operand stack configuration in order to use psDrawLine:
%		psDrawLine
%		y0
%		x0
%		y1
%		x1
%		graphics-context dictionary
% this draws a line from (x0, y0) to (x1, y1).

/psDrawLine
        {	gsave
                newpath
                yVal moveto
                yVal lineto
		begin installGC stroke end
		grestore }
        def

% operand stack configuration in order to use psDrawIStr:
%		psDrawIStr
%		window type: title or window
%		string
%		y
%		x
%		graphics-context dictionary
% it draws a text string in foreground color on top of bounding box of
% string, which is in background color.

/psDrawIStr
        {	gsave
		newpath					%% for rectangle
                loadFont

		/window exch def			%% get window type

                %% draw bounding box with background color
                /str exch def				%% get text string
                str stringwidth pop 1 sub               %% width
                FontHeight 1 sub                        %% height
                currentfont begin			%% get font height
                        FontBBox
                end
                /ypos exch def pop			%% define ypos
                neg ypos add /offset exch def pop
                /offset ypos offset div FontHeight mul def %% define offset
                /h exch def /w exch def			%% define h
                /y0 exch def				%% define y0
                /x0 exch def				%% define x0
                w h x0 y0 offset sub
		window (title) eq
		{hVal moveto drawRect}			%% draws in title window
		{rectangle} ifelse			%% draws in view window
		begin
                BGcolor setgray fill	%% set background box color

		x0 y0
		window (title) eq 
                {hVal}					%% print title text
                {yVal} ifelse				%% print window text
		moveto str 
                FGcolor setgray show			%% set text color
		end
                grestore }
        def

% operand stack configuration in order to use psFillArc:
%		psFillArc
%		y center of rectangle
%		x center of rectangle
%		angle2
%		angle1
%		width
%		height
%		y
%		x
%		graphics-context dictionary
% this draws and fills an arc whose origin is at x, y, and whose width
% and height specifies the rectangle which encases the arc.
% Origin is at upper left corner of rectangle.
% This function uses "scale" to make cricles and ellipses.
/psFillArc
        {	gsave
                newpath
		yVal moveto
                /sfactor 4 index 4 index div def
                1 sfactor scale
                6 5 roll			%%	 x on top of stack
                3 index 2 div add               %% define x origin
                6 5 roll			%%	 y on top of stack
                6 5 roll			%%	 h on top of stack
                2 div add yVal sfactor div      %% define y origin
                5 4 roll			%%	 w on top of stack
                2 div                           %% define radius
                5 3 roll			%%	 a1 a2 now on top
                1 index add
                arcn                            %% draw clockwise arc
                begin installGC fill end	%% fills with foreground color
                grestore }
        def

%-------------------------- script --------------------------%

% 1 inch 1 inch translate

   mark					%% mark bottom of our stack

	0	0	1
	1072693248	0	/globalGC1	makeDict
	0	0	1
	1072693248	0	/globalGC2	makeDict
	0	0	1
	1072693248	0	/trashGC	makeDict
	0	0	1
	1072693248	0	/globGC	makeDict
	0	0	1
	1072693248	0	/anotherGC	makeDict
	0	0	1
	1072693248	0	/graphGC	makeDict
	0	0	1
	1072693248	0	/unitGC	makeDict

    gsave	% save graphics state for clipping path

	1.000000	1.000000	scale

	24	303	300	setDim
	maxX maxY	0 0	rectangle	clip	% set clip path

	globalGC1	300	151	0	151	psDrawLine
	globalGC1	39	303	39	0	psDrawLine
	unitGC	88	153	88	149	psDrawLine
	unitGC	76	166	(2.19)	(window)	psDrawIStr
	unitGC	137	153	137	149	psDrawLine
	unitGC	125	166	(4.37)	(window)	psDrawIStr
	unitGC	186	153	186	149	psDrawLine
	unitGC	174	166	(6.56)	(window)	psDrawIStr
	unitGC	235	153	235	149	psDrawLine
	unitGC	223	166	(8.74)	(window)	psDrawIStr
	unitGC	284	153	284	149	psDrawLine
	unitGC	269	166	(10.93)	(window)	psDrawIStr
	unitGC	41	104	37	104	psDrawLine
	unitGC	3	109	(2.39)	(window)	psDrawIStr
	unitGC	41	57	37	57	psDrawLine
	unitGC	3	62	(4.78)	(window)	psDrawIStr
	unitGC	41	10	37	10	psDrawLine
	unitGC	3	15	(7.18)	(window)	psDrawIStr
	unitGC	41	197	37	197	psDrawLine
	unitGC	-6	202	(-2.39)	(window)	psDrawIStr
	unitGC	41	243	37	243	psDrawLine
	unitGC	-6	248	(-4.78)	(window)	psDrawIStr
	unitGC	41	289	37	289	psDrawLine
	unitGC	-6	294	(-7.18)	(window)	psDrawIStr
	globalGC1	147 35	3 3	0 360	148 36	psFillArc
	globalGC1	148	36	148	36	psDrawLine
	globalGC1	147 35	3 3	0 360	148 36	psFillArc
	globalGC1	138	36	148	36	psDrawLine
	globalGC1	137 35	3 3	0 360	138 36	psFillArc
	globalGC1	127	37	138	36	psDrawLine
	globalGC1	126 36	3 3	0 360	127 37	psFillArc
	globalGC1	116	39	127	37	psDrawLine
	globalGC1	115 38	3 3	0 360	116 39	psFillArc
	globalGC1	105	42	116	39	psDrawLine
	globalGC1	104 41	3 3	0 360	105 42	psFillArc
	globalGC1	94	46	105	42	psDrawLine
	globalGC1	93 45	3 3	0 360	94 46	psFillArc
	globalGC1	84	52	94	46	psDrawLine
	globalGC1	83 51	3 3	0 360	84 52	psFillArc
	globalGC1	73	58	84	52	psDrawLine
	globalGC1	72 57	3 3	0 360	73 58	psFillArc
	globalGC1	61	68	73	58	psDrawLine
	globalGC1	60 67	3 3	0 360	61 68	psFillArc
	globalGC1	53	77	61	68	psDrawLine
	globalGC1	52 76	3 3	0 360	53 77	psFillArc
	globalGC1	46	86	53	77	psDrawLine
	globalGC1	45 85	3 3	0 360	46 86	psFillArc
	globalGC1	41	95	46	86	psDrawLine
	globalGC1	40 94	3 3	0 360	41 95	psFillArc
	globalGC1	37	105	41	95	psDrawLine
	globalGC1	36 104	3 3	0 360	37 105	psFillArc
	globalGC1	35	114	37	105	psDrawLine
	globalGC1	34 113	3 3	0 360	35 114	psFillArc
	globalGC1	33	123	35	114	psDrawLine
	globalGC1	32 122	3 3	0 360	33 123	psFillArc
	globalGC1	33	132	33	123	psDrawLine
	globalGC1	32 131	3 3	0 360	33 132	psFillArc
	globalGC1	33	132	33	132	psDrawLine
	globalGC1	32 131	3 3	0 360	33 132	psFillArc
	globalGC1	33	142	33	132	psDrawLine
	globalGC1	32 141	3 3	0 360	33 142	psFillArc
	globalGC1	34	151	33	142	psDrawLine
	globalGC1	33 150	3 3	0 360	34 151	psFillArc
	globalGC1	34	151	34	151	psDrawLine
	globalGC1	33 150	3 3	0 360	34 151	psFillArc
	globalGC1	33	160	34	151	psDrawLine
	globalGC1	32 159	3 3	0 360	33 160	psFillArc
	globalGC1	33	170	33	160	psDrawLine
	globalGC1	32 169	3 3	0 360	33 170	psFillArc
	globalGC1	33	170	33	170	psDrawLine
	globalGC1	32 169	3 3	0 360	33 170	psFillArc
	globalGC1	33	179	33	170	psDrawLine
	globalGC1	32 178	3 3	0 360	33 179	psFillArc
	globalGC1	35	188	33	179	psDrawLine
	globalGC1	34 187	3 3	0 360	35 188	psFillArc
	globalGC1	37	198	35	188	psDrawLine
	globalGC1	36 197	3 3	0 360	37 198	psFillArc
	globalGC1	41	207	37	198	psDrawLine
	globalGC1	40 206	3 3	0 360	41 207	psFillArc
	globalGC1	46	216	41	207	psDrawLine
	globalGC1	45 215	3 3	0 360	46 216	psFillArc
	globalGC1	53	225	46	216	psDrawLine
	globalGC1	52 224	3 3	0 360	53 225	psFillArc
	globalGC1	62	235	53	225	psDrawLine
	globalGC1	61 234	3 3	0 360	62 235	psFillArc
	globalGC1	72	243	62	235	psDrawLine
	globalGC1	71 242	3 3	0 360	72 243	psFillArc
	globalGC1	83	250	72	243	psDrawLine
	globalGC1	82 249	3 3	0 360	83 250	psFillArc
	globalGC1	94	255	83	250	psDrawLine
	globalGC1	93 254	3 3	0 360	94 255	psFillArc
	globalGC1	105	260	94	255	psDrawLine
	globalGC1	104 259	3 3	0 360	105 260	psFillArc
	globalGC1	116	263	105	260	psDrawLine
	globalGC1	115 262	3 3	0 360	116 263	psFillArc
	globalGC1	126	265	116	263	psDrawLine
	globalGC1	125 264	3 3	0 360	126 265	psFillArc
	globalGC1	137	266	126	265	psDrawLine
	globalGC1	136 265	3 3	0 360	137 266	psFillArc
	globalGC1	148	266	137	266	psDrawLine
	globalGC1	147 265	3 3	0 360	148 266	psFillArc
	globalGC1	152	266	148	266	psDrawLine
	globalGC1	151 265	3 3	0 360	152 266	psFillArc
	globalGC1	163	266	152	266	psDrawLine
	globalGC1	162 265	3 3	0 360	163 266	psFillArc
	globalGC1	173	264	163	266	psDrawLine
	globalGC1	172 263	3 3	0 360	173 264	psFillArc
	globalGC1	184	262	173	264	psDrawLine
	globalGC1	183 261	3 3	0 360	184 262	psFillArc
	globalGC1	195	259	184	262	psDrawLine
	globalGC1	194 258	3 3	0 360	195 259	psFillArc
	globalGC1	206	254	195	259	psDrawLine
	globalGC1	205 253	3 3	0 360	206 254	psFillArc
	globalGC1	217	249	206	254	psDrawLine
	globalGC1	216 248	3 3	0 360	217 249	psFillArc
	globalGC1	227	242	217	249	psDrawLine
	globalGC1	226 241	3 3	0 360	227 242	psFillArc
	globalGC1	238	234	227	242	psDrawLine
	globalGC1	237 233	3 3	0 360	238 234	psFillArc
	globalGC1	248	225	238	234	psDrawLine
	globalGC1	247 224	3 3	0 360	248 225	psFillArc
	globalGC1	256	216	248	225	psDrawLine
	globalGC1	255 215	3 3	0 360	256 216	psFillArc
	globalGC1	263	207	256	216	psDrawLine
	globalGC1	262 206	3 3	0 360	263 207	psFillArc
	globalGC1	268	197	263	207	psDrawLine
	globalGC1	267 196	3 3	0 360	268 197	psFillArc
	globalGC1	272	188	268	197	psDrawLine
	globalGC1	271 187	3 3	0 360	272 188	psFillArc
	globalGC1	275	179	272	188	psDrawLine
	globalGC1	274 178	3 3	0 360	275 179	psFillArc
	globalGC1	277	170	275	179	psDrawLine
	globalGC1	276 169	3 3	0 360	277 170	psFillArc
	globalGC1	279	160	277	170	psDrawLine
	globalGC1	278 159	3 3	0 360	279 160	psFillArc
	globalGC1	279	151	279	160	psDrawLine
	globalGC1	278 150	3 3	0 360	279 151	psFillArc
	globalGC1	279	148	279	151	psDrawLine
	globalGC1	278 147	3 3	0 360	279 148	psFillArc
	globalGC1	278	139	279	148	psDrawLine
	globalGC1	277 138	3 3	0 360	278 139	psFillArc
	globalGC1	277	129	278	139	psDrawLine
	globalGC1	276 128	3 3	0 360	277 129	psFillArc
	globalGC1	274	120	277	129	psDrawLine
	globalGC1	273 119	3 3	0 360	274 120	psFillArc
	globalGC1	271	111	274	120	psDrawLine
	globalGC1	270 110	3 3	0 360	271 111	psFillArc
	globalGC1	266	102	271	111	psDrawLine
	globalGC1	265 101	3 3	0 360	266 102	psFillArc
	globalGC1	261	92	266	102	psDrawLine
	globalGC1	260 91	3 3	0 360	261 92	psFillArc
	globalGC1	254	83	261	92	psDrawLine
	globalGC1	253 82	3 3	0 360	254 83	psFillArc
	globalGC1	245	74	254	83	psDrawLine
	globalGC1	244 73	3 3	0 360	245 74	psFillArc
	globalGC1	234	65	245	74	psDrawLine
	globalGC1	233 64	3 3	0 360	234 65	psFillArc
	globalGC1	224	57	234	65	psDrawLine
	globalGC1	223 56	3 3	0 360	224 57	psFillArc
	globalGC1	213	51	224	57	psDrawLine
	globalGC1	212 50	3 3	0 360	213 51	psFillArc
	globalGC1	202	46	213	51	psDrawLine
	globalGC1	201 45	3 3	0 360	202 46	psFillArc
	globalGC1	191	42	202	46	psDrawLine
	globalGC1	190 41	3 3	0 360	191 42	psFillArc
	globalGC1	180	39	191	42	psDrawLine
	globalGC1	179 38	3 3	0 360	180 39	psFillArc
	globalGC1	170	37	180	39	psDrawLine
	globalGC1	169 36	3 3	0 360	170 37	psFillArc
	globalGC1	159	36	170	37	psDrawLine
	globalGC1	158 35	3 3	0 360	159 36	psFillArc
	globalGC1	148	36	159	36	psDrawLine
	globalGC1	147 35	3 3	0 360	148 36	psFillArc
	globalGC1	103 111	3 3	0 360	104 112	psFillArc
	globalGC1	104	112	104	112	psDrawLine
	globalGC1	103 111	3 3	0 360	104 112	psFillArc
	globalGC1	100	112	104	112	psDrawLine
	globalGC1	99 111	3 3	0 360	100 112	psFillArc
	globalGC1	90	114	100	112	psDrawLine
	globalGC1	89 113	3 3	0 360	90 114	psFillArc
	globalGC1	79	117	90	114	psDrawLine
	globalGC1	78 116	3 3	0 360	79 117	psFillArc
	globalGC1	68	123	79	117	psDrawLine
	globalGC1	67 122	3 3	0 360	68 123	psFillArc
	globalGC1	58	132	68	123	psDrawLine
	globalGC1	57 131	3 3	0 360	58 132	psFillArc
	globalGC1	52	142	58	132	psDrawLine
	globalGC1	51 141	3 3	0 360	52 142	psFillArc
	globalGC1	50	151	52	142	psDrawLine
	globalGC1	49 150	3 3	0 360	50 151	psFillArc
	globalGC1	50	155	50	151	psDrawLine
	globalGC1	49 154	3 3	0 360	50 155	psFillArc
	globalGC1	53	164	50	155	psDrawLine
	globalGC1	52 163	3 3	0 360	53 164	psFillArc
	globalGC1	61	173	53	164	psDrawLine
	globalGC1	60 172	3 3	0 360	61 173	psFillArc
	globalGC1	72	181	61	173	psDrawLine
	globalGC1	71 180	3 3	0 360	72 181	psFillArc
	globalGC1	83	186	72	181	psDrawLine
	globalGC1	82 185	3 3	0 360	83 186	psFillArc
	globalGC1	93	189	83	186	psDrawLine
	globalGC1	92 188	3 3	0 360	93 189	psFillArc
	globalGC1	104	190	93	189	psDrawLine
	globalGC1	103 189	3 3	0 360	104 190	psFillArc
	globalGC1	106	190	104	190	psDrawLine
	globalGC1	105 189	3 3	0 360	106 190	psFillArc
	globalGC1	117	189	106	190	psDrawLine
	globalGC1	116 188	3 3	0 360	117 189	psFillArc
	globalGC1	127	185	117	189	psDrawLine
	globalGC1	126 184	3 3	0 360	127 185	psFillArc
	globalGC1	138	179	127	185	psDrawLine
	globalGC1	137 178	3 3	0 360	138 179	psFillArc
	globalGC1	147	170	138	179	psDrawLine
	globalGC1	146 169	3 3	0 360	147 170	psFillArc
	globalGC1	151	160	147	170	psDrawLine
	globalGC1	150 159	3 3	0 360	151 160	psFillArc
	globalGC1	153	151	151	160	psDrawLine
	globalGC1	152 150	3 3	0 360	153 151	psFillArc
	globalGC1	152	142	153	151	psDrawLine
	globalGC1	151 141	3 3	0 360	152 142	psFillArc
	globalGC1	147	133	152	142	psDrawLine
	globalGC1	146 132	3 3	0 360	147 133	psFillArc
	globalGC1	137	122	147	133	psDrawLine
	globalGC1	136 121	3 3	0 360	137 122	psFillArc
	globalGC1	126	116	137	122	psDrawLine
	globalGC1	125 115	3 3	0 360	126 116	psFillArc
	globalGC1	115	113	126	116	psDrawLine
	globalGC1	114 112	3 3	0 360	115 113	psFillArc
	globalGC1	104	112	115	113	psDrawLine
	globalGC1	103 111	3 3	0 360	104 112	psFillArc

    grestore	% restore graphics state


   cleartomark					%% clearing operand stack

end		%% pops mainDict from dictionary stack

showpage

%-------------------------- end --------------------------%
