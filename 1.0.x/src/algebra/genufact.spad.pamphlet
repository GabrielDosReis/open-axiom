\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/algebra genufact.spad}
\author{The Axiom Team}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{package GENUFACT GenUFactorize}
<<package GENUFACT GenUFactorize>>=
)abbrev package GENUFACT GenUFactorize
++ Description
++ This package provides operations for the factorization of univariate polynomials with integer
++ coefficients. The factorization is done by "lifting" the
++ finite "berlekamp's" factorization
GenUFactorize(R) : public == private where
  R    :    EuclideanDomain
  PR   ==>  SparseUnivariatePolynomial R  -- with factor
            -- should be UnivariatePolynomialCategory
  NNI  ==>  NonNegativeInteger
  SUP  ==>  SparseUnivariatePolynomial
 
 
  public == with
     factor      :           PR  -> Factored PR
	++ factor(p) returns the factorisation of p
 
  private == add

    -- Factorisation currently fails when algebraic extensions have multiple
    -- generators.
    factorWarning(f:OutputForm):Void ==
      import AnyFunctions1(String)
      import AnyFunctions1(OutputForm)
      outputList(["WARNING (genufact): No known algorithm to factor "::Any, _
              f::Any, _
              ", trying square-free."::Any])$OutputPackage
 
    factor(f:PR) : Factored PR ==
      R is Integer => (factor f)$GaloisGroupFactorizer(PR)
 
      R is Fraction Integer  =>
                                (factor f)$RationalFactorize(PR)
 
--      R has Field and R has Finite =>
      R has FiniteFieldCategory =>
                                (factor f)$DistinctDegreeFactorize(R,PR)
 
      R is (Complex Integer) => (factor f)$ComplexFactorization(Integer,PR)
 
      R is (Complex Fraction Integer) =>
                           (factor f)$ComplexFactorization(Fraction Integer,PR)
 
      R is AlgebraicNumber =>   (factor f)$AlgFactor(PR)
 
   -- following is to handle SAE
      R has generator : () -> R =>
        var := symbol(convert(generator()::OutputForm)@InputForm)
        up:=UnivariatePolynomial(var,Fraction Integer)
        R has MonogenicAlgebra(Fraction Integer, up) =>
           factor(f)$SimpleAlgebraicExtensionAlgFactor(up, R, PR)
        upp:=UnivariatePolynomial(var,Fraction Polynomial Integer)
        R has MonogenicAlgebra(Fraction Polynomial Integer, upp) =>
           factor(f)$SAERationalFunctionAlgFactor(upp, R, PR)
        factorWarning(f::OutputForm)
        squareFree f            
      factorWarning(f::OutputForm)
      squareFree f

@
\section{License}
<<license>>=
--Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
--All rights reserved.
--
--Redistribution and use in source and binary forms, with or without
--modification, are permitted provided that the following conditions are
--met:
--
--    - Redistributions of source code must retain the above copyright
--      notice, this list of conditions and the following disclaimer.
--
--    - Redistributions in binary form must reproduce the above copyright
--      notice, this list of conditions and the following disclaimer in
--      the documentation and/or other materials provided with the
--      distribution.
--
--    - Neither the name of The Numerical ALgorithms Group Ltd. nor the
--      names of its contributors may be used to endorse or promote products
--      derived from this software without specific prior written permission.
--
--THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
--IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
--TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
--PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
--OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
--EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
--PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
--PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
--LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
--NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
--SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@
<<*>>=
<<license>>

<<package GENUFACT GenUFactorize>>
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
